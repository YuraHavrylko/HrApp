@{
    ViewBag.Title = "Home Page";
    string fSalaryStart = "";
    if (ViewBag.SalaryStart != null)
    {
        fSalaryStart = ViewBag.SalaryStart.ToString();
    }

    string fSalaryFinish = "";
    if (ViewBag.SalaryFinish != null)
    {
        fSalaryFinish = ViewBag.SalaryFinish.ToString();
    }

    string fWorkExpireanceStart = "";
    if (ViewBag.WorkExpireanceStart != null)
    {
        fWorkExpireanceStart = ViewBag.WorkExpireanceStart.ToString();
    }

    string fWorkExpireanceFinish = "";
    if (ViewBag.WorkExpireanceFinish != null)
    {
        fWorkExpireanceFinish = ViewBag.WorkExpireanceFinish.ToString();
    }

    string fLanguageName = "";
    if (ViewBag.LanguageName != null)
    {
        fLanguageName = ViewBag.LanguageName.ToString();
    }

    string fLanguageLevelName = "";
    if (ViewBag.LanguageLevelName != null)
    {
        fLanguageLevelName = ViewBag.LanguageLevelName.ToString();
    }

    string fInterviewStartDate = null;
    if (ViewBag.InterviewStartDate != null)
    {
        fInterviewStartDate = ViewBag.InterviewStartDate.ToString();
    }

    string fInterviewFinishDate = null;
    if (ViewBag.InterviewFinishDate != null)
    {
        fInterviewFinishDate = ViewBag.InterviewFinishDate.ToString();
    }

    string fTypeJobName = "";
    if (ViewBag.TypeJobName != null)
    {
        fTypeJobName = ViewBag.TypeJobName.ToString();
    }

    List<TypeLanguage> languages = ViewBag.Languages;
    List<LanguageLevel> levels = ViewBag.LanguageLevel;
    List<TypeJobsName> typeJob = ViewBag.TypeJob;
}
@using HrApp.Models
@using HrApp.Repositories
@model IEnumerable<HrApp.Models.Person>

<div style="padding-top: 25px" align="center">

    @using (Html.BeginForm("Filter", "Home", FormMethod.Get, new { @class = "form-horizontal", role = "form" }))
            {
                <div class="container">
                    <div class="">
                        @using (Html.BeginForm())
                        {
                            @Html.ValidationSummary(true)
                            <fieldset>
                                <legend>Find form</legend>
                                <div class="row">
                                    <div class="col-md-2">
                                        <h4>Salary:</h4>
                                        <div class="form-group">
                                            <div class="col-md-3">
                                                @Html.Label("from", new { @class = "control-label" })
                                            </div>
                                            <div class="col-md-9">
                                                @Html.TextBox("SalaryStart", fSalaryStart, new { @class = "form-control " })
                                            </div>
                                        </div>
                                        <div class="form-group">
                                            <div class="col-md-3">
                                                @Html.Label("to", new { @class = "control-label" })
                                            </div>
                                            <div class="col-md-9">
                                                @Html.TextBox("SalaryFinish", fSalaryFinish, new { @class = "form-control" })
                                            </div>

                                        </div>



                                    </div>
                                    <div class="col-md-2">
                                        <h4>Work experience:</h4>
                                        <div class="form-group">
                                            <div class="col-md-3">
                                                @Html.Label("from", new { @class = "control-label" })
                                            </div>
                                            <div class="col-md-9">
                                                @Html.TextBox("WorkExpireanceStart", fWorkExpireanceStart, new { @class = "form-control " })
                                            </div>
                                        </div>
                                        <div class="form-group">
                                            <div class="col-md-3">
                                                @Html.Label("to", new { @class = "control-label" })
                                            </div>
                                            <div class="col-md-9">
                                                @Html.TextBox("WorkExpireanceFinish", fWorkExpireanceFinish, new { @class = "form-control" })
                                            </div>
                                        </div>
                                    </div>
                                    

                                    <div class="col-md-2">
                                        <h4>Language:</h4>
                                        <div class="form-group">
                                            <div class="col-md-3">
                                                @Html.Label("name", new { @class = "control-label" })
                                            </div>
                                            <div class="col-md-9">
                                                @Html.DropDownList("LanguageName", new SelectList(languages.Select(x => x.LanguageName)), fLanguageName, new { @class = "form-control " })
                                            </div>
                                        </div>
                                        <div class="form-group">
                                            <div class="col-md-3">
                                                @Html.Label("level", new { @class = "control-label" })
                                            </div>
                                            <div class="col-md-9">
                                                @Html.DropDownList("LanguageLevelName", new SelectList(levels.Select(x => x.LanguageLevelName)), fLanguageLevelName, new { @class = "form-control " })
                                            </div>
                                        </div>
                                    </div>
                                    
                                    <div class="col-md-3">
                                        <h4>Interview date:</h4>
                                        <div class="form-group">
                                            <div class="col-md-3">
                                                @Html.Label("from", new { @class = "control-label" })
                                            </div>
                                            <div class="col-md-9">
                                                @Html.TextBox("InterviewStartDate", fInterviewStartDate, new {type = "date", @class = "form-control " })
                                            </div>
                                        </div>
                                        <div class="form-group">
                                            <div class="col-md-3">
                                                @Html.Label("to", new { @class = "control-label" })
                                            </div>
                                            <div class="col-md-9">
                                                @Html.TextBox("InterviewFinishDate", fInterviewFinishDate, new { type = "date", @class = "form-control" })
                                            </div>
                                        </div>
                                    </div>
                                    

                                    <div class="col-md-3">
                                        <h4>Type job:</h4>
                                        <div class="form-group">
                                            <div class="col-md-3">
                                                @Html.Label("name", new { @class = "control-label" })
                                            </div>
                                            <div class="col-md-9">
                                                @Html.DropDownList("TypeJobName", new SelectList(typeJob.Select(x => x.TypeJobName)), fTypeJobName, new { @class = "form-control " })
                                                <p>
                                                    <br/>
                                                    <input type="submit" value="Create" class="btn btn-success btn-block"/>
                                                </p>
                                                    </div>
                                        </div>
                          
                                    </div>
                                </div>
                            </fieldset>
                        }
                        
                    </div>
                </div>

    }

</div>



<div class="panel-group" style="padding: 5px">
        @foreach (var person in Model)
        {
            <div class="row panel panel-default" style="padding: 5px;  margin-top: 15px; margin-right: 10px; margin-left: 10px">
            <div class="col-md-4">
                <div class="btn-group btn-group-justified">
                    <a type="button" class="btn btn-info btn-sm" onclick="location.href='@Url.Action("FullInformation", "Home", new {id = person.PersonId}, null)'">Open</a>
                    <a type="button" class="btn btn-warning btn-sm" onclick="location.href = '@Url.Action("Edit", "Home", new {id = person.PersonId}, null)'">Edit</a>
                    <a type="button" class="btn btn-danger btn-sm" onclick="location.href = '@Url.Action("Delete", "Home", new {id = person.PersonId}, null)'">Delete</a>
                </div>
                <div class="row">
                    <div class="col-md-6">
                        <h3>
                            <b>@person.FirstName @person.LastName</b>
                        </h3>
                        @if (person.Jobs != null)
                        {
                            <ul>
                                @foreach (var job in person.Jobs)
                                {
                                    <p>
                                        <li><b>@job.JobName</b></li>
                                    </p>
                                }
                            </ul>
                        }
                        <p>
                            <b>
                                Date of birth
                            </b><br/>@person.Birthday.ToString("dd MMMM yyyy") (@{
                                                                                    var age = 0;
                                                                                    age = DateTime.Now.Year - @person.Birthday.Year;
                                                                                } @age years)
                        </p>
                        <p><b>City:</b> @person.City</p>
                        <p><b>Phone:</b> @person.Phone</p>
                        <p><b>Email:</b> @person.Email</p>
                    </div>
                    <div class="col-md-6">
                        <p class="text-right">
                            <b>from @person.Salary UAH/mon</b>
                        </p>
                        @if (person.PersonTypeJobs != null)
                        {
                            foreach (var job in person.PersonTypeJobs)
                            {
                                <p>
                                    <b>@job.TypeJobName</b>
                                </p>
                            }
                        }
                        <p>
                            <br/><b>Education</b>
                        </p>
                        @if (person.Educations != null)
                        {
                            foreach (var education in person.Educations)
                            {
                                <p>@education.SpecialityName</p>
                                <p>
                                    @{
                                        var startDate = education.StartDate.Value.ToString("MM.yyyy");
                                        var endDate = education.FinishDate.Value != null ? education.FinishDate.Value.ToString("MM.yyyy") : "today";
                                        var totaldays = ((education.FinishDate.Value != null ? education.FinishDate.Value : DateTime.Now) - education.StartDate.Value).TotalDays;
                                        int years = (int) Math.Truncate(totaldays / 365);
                                        var month = (int) Math.Truncate((totaldays - (365 * years)) / 30);
                                        var during = (years > 0 ? years + " years" : "") + (month > 0 ? " " + month + " month" : "");
                                    }from @startDate to @endDate (@during)
                                </p>
                                <p>@education.EducationalInstitutionName</p>
                                <hr/>
                            }
                        }
                    </div>
                </div>
            </div>
                <div class="col-md-4">
                    <div class="row">
                        <div class="col-md-6">
                            <p>
                                <b>Work experience (@person.WorkExpireance years)</b>
                            </p>
                            <p></p>
                            @if (person.WorkExperiences != null)
                {
                    foreach (var experience in person.WorkExperiences)
                    {
                                    <p>@experience.PositionName</p>
                                    <p>
                                        @{
                                            var startDate = experience.StartDate.Value.ToString("MM.yyyy");
                                            var endDate = experience.FinishDate.Value != null ? experience.FinishDate.Value.ToString("MM.yyyy") : "Today";
                                            var totaldays = ((experience.FinishDate.Value != null ? experience.FinishDate.Value : DateTime.Now) - experience.StartDate.Value).TotalDays;
                                            int years = (int)Math.Truncate(totaldays / 365);
                                            var month = (int)Math.Truncate((totaldays - (365 * years)) / 30);
                                            var duringExp = (years > 0 ? years + " years" : "") + (month > 0 ? " " + month + " month" : "");
                                        }from @startDate to @endDate (@duringExp)
                                    </p>
                                    <p>@experience.CompanyName</p>
                                    <hr />
                                                }
                                            }
                        </div>
                        <div class="col-md-6">
                            <p>
                                <b>Knowlerge of language</b>
                            </p>
                            @if (person.Languages != null)
                {
                                <ul>
                                    @foreach (var language in person.Languages)
                                    {
                                        <li>
                                            <p>
                                                @language.LanguageName - @language.LanguageLevelName
                                            </p>
                                        </li>
                                    }
                                </ul>
                            }
                            <p>
                                <b>Professional skills</b>
                            </p>
                            @if (person.ProfessionalSkills != null)
                {
                                <ul>
                                    @foreach (var skill in person.ProfessionalSkills)
                                    {
                                        <li>
                                            <p>
                                                @skill.SkillName
                                            </p>
                                        </li>
                                    }
                                </ul>
                            }
                        </div>
                    </div>
                </div>
                <div class="col-md-4">
                    <div class="row">
                        <div class="col-md-7">
                            <p>
                                <b>Interviews</b>
                            </p>
                            @if (person.Interviews != null)
                {
                    foreach (var interview in person.Interviews)
                    {
                                    <div class="row">
                                        <div class="col-md-6">
                                            <p>@interview.InterviewDate.ToString("dd.MM.yyyy")</p>
                                        </div>
                                        <div class="col-md-6">
                                            <p class="text-right"><b>Point:</b> @interview.Point</p>
                                        </div>
                                    </div>
                                }
                            }

                            <p>
                                <b>Comments</b>
                            </p>
                            @if (person.Interviews != null)
                {
                    foreach (var interview in person.Interviews)
                    {
                                    <p>@interview.Comment</p>
                                }
                            }

                        </div>

                        <div class="col-md-5">
                            <p class="text-center">
                                <b>Resume files</b>
                            </p>
                            @if (person.Interviews != null)
                {
                                <div class="row">
                                    @foreach (var interview in person.Interviews)
                                    {
                                        <div class="col-md-4">
                                            <img src="/file.png" width="35" height="35" class="img-thumbnail">
                                            <p><small class="">@interview.FileResume</small></p>
                                            <a href="/someHref">Load</a>
                                        </div>
                                    }
                                </div>
                            }
                            <p class="text-center">
                                <b>Test files</b>
                            </p>
                            @if (person.Interviews != null)
                {
                                <div class="row">
                                    @foreach (var interview in person.Interviews)
                                    {
                                        <div class="col-md-4">
                                            <img src="/file.png" width="35" height="35" class="img-thumbnail">
                                            <p><small>@interview.FileTest</small></p>
                                            <a href="/someHref">Load</a>
                                        </div>
                                    }
                                </div>
                            }

                        </div>
                    </div>
                </div>

            </div>
          }
    </div>


    <ul class="pagination">
    @for (int i = 0; i < (int)Math.Ceiling((ViewBag.CountPerson * 1.0) / ViewBag.Count); i++)
    {
        if (ViewBag.Page == i + 1)
        {
            <li class="active"><a href="@Url.Action(ViewContext.RouteData.Values["action"].ToString(), "Home", new { page = i + 1 })">@(i + 1)</a></li>
        }
        else
        {
            <li><a href="@Url.Action(ViewContext.RouteData.Values["action"].ToString(), "Home", new { page = i  + 1, SalaryStart = fSalaryStart, SalaryFinish  = fSalaryFinish, LanguageName = fLanguageName, LanguageLevelName  = fLanguageLevelName, WorkExpireanceStart  = fWorkExpireanceStart, WorkExpireanceFinish =fWorkExpireanceFinish, TypeJobName = fTypeJobName, interviewStartDate = fInterviewStartDate, interviewFinishDate  = fInterviewFinishDate})">@(i + 1)</a></li>
        }
    }
</ul>



