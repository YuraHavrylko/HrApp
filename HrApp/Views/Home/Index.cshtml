@using HrApp.Models
@model BigPersonModel

@{
    ViewBag.Title = "Home Page";
    int counter = 0;
}


<div class="content-wrapper">
<section class="content-header">
    <h1>
        Home
    </h1>
    <ol class="breadcrumb">
        <li><a href="/Home"><i class="fa fa-dashboard"></i> Home</a></li>
    </ol>
</section>
<section class="content">
    <div class="row">
        @*<div class="panel-group" >
                <div class="row panel panel-default" style="padding: 5px; margin-top: 5px; margin-right: 1px; margin-left: 1px;" align="center">
                    <div class="btn-group btn-group-justified">
                        <a type="button" class="btn btn-primary" onclick="location.href = '@Url.Action("Create", "Home", null, null)'" style="color: white">Create person</a>
                        <a type="button" class="btn  btn-primary" onclick="location.href = '@Url.Action("Index", "LanguageName", null, null)'" style="color: white">Manage languages</a>
                        <a type="button" class="btn  btn-primary" onclick="location.href = '@Url.Action("Index", "LevelLanguage", null, null)'" style="color: white">Manage levels language</a>
                        <a type="button" class="btn btn-primary" onclick="location.href = '@Url.Action("Index", "TypeJobName", null, null)'" style="color: white">Manage type jobs</a>
                    </div>
                </div>
            </div>*@
        <div class="col-md-12">
            <div class="box  box-default collapsed-box">
                <div class="box-header with-border">
                    <h3 class="box-title">Find form</h3>

                    <div class="box-tools pull-right">
                        <button type="button" class="btn btn-box-tool" data-widget="collapse"><i class="fa fa-plus"></i>
                        </button>
                    </div>
                    <!-- /.box-tools -->
                </div>
                <div class="box-body">
                    @using (Html.BeginForm("Filter", "Home", FormMethod.Get, new { @class = "form-horizontal", role = "form" }))
                    {
                                using (Html.BeginForm())
                                {
                                    @Html.ValidationSummary(true)
                                    <fieldset>
                                        <div class="">
                                            <div class="row rowWithFullWidth">
                                                <div class="col-md-1">
                                                    <h4>Salary:</h4>
                                                    <div class="form-group">
                                                        <div class="col-md-3">
                                                            @Html.Label("from", new { @class = "control-label" })
                                                        </div>
                                                        <div class="col-md-7">
                                                            @Html.TextBoxFor(model => model.PersonSearchModel.SalaryStart, new { @class = "form-control " })
                                                        </div>
                                                    </div>
                                                    <div class="form-group">
                                                        <div class="col-md-3 ">
                                                            @Html.Label("to", new { @class = "control-label" })
                                                        </div>
                                                        <div class="col-md-7">
                                                            @Html.TextBoxFor(model => model.PersonSearchModel.SalaryFinish, new { @class = "form-control" })
                                                        </div>

                                                    </div>



                                                </div>

                                                <div class="col-md-1"></div>
                                                <div class="col-md-1">
                                                    <h4>Experience:</h4>
                                                    <div class="form-group">
                                                        <div class="col-md-3">
                                                            @Html.Label("from", new { @class = "control-label" })
                                                        </div>
                                                        <div class="col-md-7">
                                                            @Html.TextBoxFor(model => model.PersonSearchModel.WorkExpireanceStart, new { @class = "form-control " })
                                                        </div>
                                                    </div>
                                                    <div class="form-group">
                                                        <div class="col-md-3">
                                                            @Html.Label("to", new { @class = "control-label" })
                                                        </div>
                                                        <div class="col-md-7">
                                                            @Html.TextBoxFor(model => model.PersonSearchModel.SalaryStart, new { @class = "form-control" })
                                                        </div>
                                                    </div>
                                                </div>

                                                <div class="col-md-1"></div>
                                                <div class="col-md-2">
                                                    <h4>Language:</h4>
                                                    <div class="form-group">
                                                        <div class="col-md-3">
                                                            @Html.Label("name", new { @class = "control-label" })
                                                        </div>
                                                        <div class="col-md-9">
                                                            @Html.DropDownListFor(model => model.PersonSearchModel.TypeLanguage.LanguageName, new SelectList(Model.PersonSearchModel.TypeLanguages.Select(x => x.LanguageName)), "", new { @class = "form-control " })
                                                        </div>
                                                    </div>
                                                    <div class="form-group">
                                                        <div class="col-md-3">
                                                            @Html.Label("level", new { @class = "control-label" })
                                                        </div>
                                                        <div class="col-md-9">
                                                            @Html.DropDownListFor(model => model.PersonSearchModel.LanguageLevel.LanguageLevelName, new SelectList(Model.PersonSearchModel.LanguageLevels.Select(x => x.LanguageLevelName)), "", new { @class = "form-control " })
                                                        </div>
                                                    </div>
                                                </div>
                                                <div class="col-md-1"></div>
                                                <div class="col-md-2">
                                                    <h4>Interview date:</h4>
                                                    <div class="form-group">
                                                        <div class="col-md-3">
                                                            @Html.Label("from", new { @class = "control-label" })
                                                        </div>
                                                        <div class="col-md-9">
                                                            @Html.TextBoxFor(model => model.PersonSearchModel.Interview.InterviewStartDate, new { type = "date", @class = "form-control " })
                                                        </div>
                                                    </div>
                                                    <div class="form-group">
                                                        <div class="col-md-3">
                                                            @Html.Label("to", new { @class = "control-label" })
                                                        </div>
                                                        <div class="col-md-9">
                                                            @Html.TextBoxFor(model => model.PersonSearchModel.Interview.InterviewFinishDate, new { type = "date", @class = "form-control" })
                                                        </div>
                                                    </div>
                                                </div>

                                                <div class="col-md-1"></div>
                                                <div class="col-md-2">
                                                    <h4>Type job:</h4>
                                                    <div class="form-group">
                                                        <div class="col-md-3">
                                                            @Html.Label("name", new { @class = "control-label" })
                                                        </div>
                                                        <div class="col-md-9">
                                                            @Html.DropDownListFor(model => model.PersonSearchModel.TypeJob.TypeJobName, new SelectList(Model.PersonSearchModel.TypeJobsNames.Select(x => x.TypeJobName)), "", new { @class = "form-control " })
                                                            <p>
                                                                <br/>
                                                                <input type="submit" value="Find" class="btn btn-sm btn-primary"/>
                                                            </p>
                                                        </div>
                                                    </div>

                                                </div>
                                            </div>
                                        </div>
                                    </fieldset>
                                }

                    }


                </div>
            </div>

        </div>
        <div class="col-md-12">
            <div class="box">
                <div class="box-body">
                    @Html.ActionLink("Create new person", "Create", "Home", null, new { @class = "btn btn-sm btn-info btn-raised btn-flat" })
                    @if (Model.Persons.Count() > 0)
                    {
                        <table class="table">
                            <thead>
                            <tr>
                                <th>User name</th>
                                <th>Job</th>
                                <th class="hidden-xs">Work experience</th>
                                <th>City</th>
                                <th class="hidden-xs">Email</th>
                                <th>Edit</th>
                                <th>Delete</th>
                            </tr>
                            </thead>
                            <tbody>
                            @foreach (var user in this.Model.Persons)
                            {
                                <tr>
                                    <td>@Html.ActionLink(@user.FirstName + " " + @user.LastName, "FullInformation", "Home", new { id = user.PersonId }, null)</td>
                                    <td>
                                        @if (user.PersonTypeJobs != null)
                                        {
                                            counter = 0;
                                            foreach (var job in user.PersonTypeJobs)
                                            {
                                                if (counter < 1)
                                                {
                                                    <p>
                                                        <b>@job.TypeJobName</b>
                                                    </p>
                                                }
                                                else
                                                {
                                                    break;
                                                }
                                                counter++;
                                            }
                                        }
                                    </td>
                                    <td class="hidden-xs">
                                        @if (user.WorkExperiences != null)
                                        {
                                            counter = 0;
                                            foreach (var experience in user.WorkExperiences)
                                            {
                                                if (counter < 1)
                                                {
                                                    <p>
                                                        @{
                                                            var startDate = experience.StartDate.Value.ToString("MM.yyyy");
                                                            var endDate = experience.FinishDate.Value != null ? experience.FinishDate.Value.ToString("MM.yyyy") : "Today";
                                                            var totaldays = ((experience.FinishDate.Value != null ? experience.FinishDate.Value : DateTime.Now) - experience.StartDate.Value).TotalDays;
                                                            int years = (int)Math.Truncate(totaldays / 365);
                                                            var month = (int)Math.Truncate((totaldays - (365 * years)) / 30);
                                                            var duringExp = (years > 0 ? years + " years" : "") + (month > 0 ? " " + month + " month" : "");
                                                        } @duringExp
                                                    </p>
                                                }
                                                else
                                                {
                                                    break;
                                                }
                                                counter++;

                                            }
                                        }
                                    </td>
                                    <td>@user.City</td>
                                    <td class="hidden-xs">@user.Email</td>


                                    <td>@Html.ActionLink("Edit", "Edit", "Home", new { id = user.PersonId }, null)</td>
                                    <td>@Html.ActionLink("Delete", "Delete", "Home", new { id = user.PersonId }, null)</td>

                                </tr>
                            }
                            </tbody>
                        </table>
                    }
                    else
                    {
                        <label style="margin-left: 10px">No User Found</label>
                    }





                    <div style="padding: 5px; margin-top: 15px; margin-right: 10px; margin-left: 10px">
                        <ul class="pagination">
                            @for (int i = 0; i < (int)Math.Ceiling((ViewBag.CountPerson * 1.0) / ViewBag.Count); i++)
                            {
                                if (ViewBag.Page == i + 1)
                                {
                                    <li class="active"><a href="@Url.Action(ViewContext.RouteData.Values["action"].ToString(), "Home", new { person = Model, page = i + 1 })">@(i + 1)</a></li>
                                }
                                else
                                {
                                    <li><a href="@Url.Action(ViewContext.RouteData.Values["action"].ToString(), "Home", new { person = Model, page = i + 1 })">@(i + 1)</a></li>
                                }
                            }
                        </ul>
                    </div>
                </div>
            </div>
        </div>
    </div>

</section>
</div>