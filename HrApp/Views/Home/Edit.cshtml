@using System.Web.Mvc.Html
@using HrApp.Helpers.Extensions
@model HrApp.Models.Person

@{
    ViewBag.Title = "Edit person data";
}
 <div class="content-wrapper">
    <section class="content-header">
        <ol class="breadcrumb">
            <li><a href="/Home"><i class="fa fa-dashboard"></i> Home</a></li>
            <li class="active">Edit person data</li>
        </ol>
    </section>
    <section class="content">
        <div class="row">
            <div class="col-md-6 col-md-offset-3">
                <div class="box">
                    <div class="box-body">
                        @using (Html.BeginForm())
                        {
                            <div class="form-group has-feedback  @Html.AddClassIfPropertyInError(x => x.FirstName, "has-error")">
                                @Html.TextBoxFor(model => model.FirstName, new { @class = "form-control", @type = "text", @placeholder = @Html.DisplayNameFor(m => m.FirstName) })
                                <span style="display: block" class="help-block">@Html.ValidationMessageFor(model => model.FirstName)</span>
                            </div>

                            <div class="form-group has-feedback  @Html.AddClassIfPropertyInError(x => x.LastName, "has-error")">
                                @Html.TextBoxFor(model => model.LastName, new { @class = "form-control", @type = "text", @placeholder = @Html.DisplayNameFor(m => m.LastName) })
                                <span style="display: block" class="help-block">@Html.ValidationMessageFor(model => model.LastName)</span>
                            </div>

                            <div class="form-group has-feedback  @Html.AddClassIfPropertyInError(x => x.Birthday, "has-error")">
                                @Html.TextBoxFor(model => model.Birthday, new { @class = "form-control", @type = "date", @placeholder = @Html.DisplayNameFor(m => m.Birthday) })
                                <span style="display: block" class="help-block">@Html.ValidationMessageFor(model => model.Birthday)</span>
                            </div>

                            <div class="form-group has-feedback  @Html.AddClassIfPropertyInError(x => x.City, "has-error")">
                                @Html.TextBoxFor(model => model.City, new { @class = "form-control", @type = "text", @placeholder = @Html.DisplayNameFor(m => m.City) })
                                <span style="display: block" class="help-block">@Html.ValidationMessageFor(model => model.City)</span>
                            </div>

                            <div class="form-group has-feedback  @Html.AddClassIfPropertyInError(x => x.Email, "has-error")">
                                @Html.TextBoxFor(model => model.Email, new { @class = "form-control", @type = "email", @placeholder = @Html.DisplayNameFor(m => m.Email) })
                                <span style="display: block" class="help-block">@Html.ValidationMessageFor(model => model.Email)</span>
                            </div>

                            <div class="form-group has-feedback  @Html.AddClassIfPropertyInError(x => x.Phone, "has-error")">
                                @Html.TextBoxFor(model => model.Phone, new { @class = "form-control", @pattern = "^[0-9]+$", @placeholder = @Html.DisplayNameFor(m => m.Phone) })
                                <span style="display: block" class="help-block">@Html.ValidationMessageFor(model => model.Phone)</span>
                            </div>

                            <div class="form-group has-feedback  @Html.AddClassIfPropertyInError(x => x.Salary, "has-error")">
                                @Html.TextBoxFor(model => model.Salary, new { @class = "form-control", @type = "number", @placeholder = @Html.DisplayNameFor(m => m.Salary) })
                                <span style="display: block" class="help-block">@Html.ValidationMessageFor(model => model.Salary)</span>
                            </div>

                            <div class="form-group has-feedback  @Html.AddClassIfPropertyInError(x => x.WorkExpireance, "has-error")">
                                @Html.TextBoxFor(model => model.WorkExpireance, new { @class = "form-control", @type = "number", @placeholder = @Html.DisplayNameFor(m => m.WorkExpireance) })
                                <span style="display: block" class="help-block">@Html.ValidationMessageFor(model => model.WorkExpireance)</span>
                            </div>
                            @Html.HiddenFor(model => model.PersonId)
                            <div class="col-xs-5">
                                <button type="submit" class="btn btn-primary btn-raised btn-block btn-flat">Edit</button>
                            </div>
                        }
                    </div>
                    <div class="box-footer clearfix">
                        @Html.ActionLink("Back to List", "Index")
                    </div>
                </div>
            </div>
        </div>
    </section>
</div>