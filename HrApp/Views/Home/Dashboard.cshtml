@using Microsoft.AspNet.Identity.Owin
@model System.Collections.Generic.IEnumerable<HrApp.Models.Person>

@{
    ViewBag.Title = "Dashboard";
    Layout = "~/Views/Shared/_Layout.cshtml";
    var userManager = HttpContext.Current.GetOwinContext().GetUserManager<ApplicationUserManager>();
}

@section Styles
{
    <link rel="stylesheet" href="https://cdnjs.cloudflare.com/ajax/libs/fullcalendar/3.4.0/fullcalendar.css" />
    <link rel="stylesheet" href="https://cdnjs.cloudflare.com/ajax/libs/fullcalendar/3.4.0/fullcalendar.print.css"  media="print"/>
}

<div class="content-wrapper">
    <section class="content-header">
        <h1>
            Dashboard
        </h1>
        <ol class="breadcrumb">
            <li><a href="/Home"><i class="fa fa-dashboard"></i> Home</a></li>
            <li class="active">Dashboard</li>
        </ol>
    </section>

    <section class="content">
        <div class="row">
            <div class="col-lg-3 col-sm-6 col-xs-12">
                <div class="info-box">
                    <span class="info-box-icon bg-aqua"><i class="fa fa-user-secret"></i></span>

                    <div class="info-box-content">
                        <span class="info-box-text">Applications</span>
                        <span class="info-box-number">@ViewData["PersonCount"]</span>
                    </div>

                </div>
            </div>

            <div class="col-lg-3 col-sm-6 col-xs-12">
                <div class="info-box">
                    <span class="info-box-icon bg-green"><i class="fa fa-file-text-o"></i></span>

                    <div class="info-box-content">
                        <span class="info-box-text">Interviews</span>
                        <span class="info-box-number">@ViewData["InterviewCount"]</span>
                    </div>

                </div>
            </div>
            <div class="col-lg-3 col-sm-6 col-xs-12">
                <div class="info-box">
                    <span class="info-box-icon bg-yellow"><i class="fa fa-graduation-cap"></i></span>

                    <div class="info-box-content">
                        <span class="info-box-text">Persons with education</span>
                        <span class="info-box-number">@ViewData["PersonEducCount"]</span>
                    </div>

                </div>

            </div>
            <div class="col-lg-3 col-sm-6 col-xs-12">
                <div class="info-box">
                    <span class="info-box-icon bg-red"><i class="fa  fa-briefcase"></i></span>

                    <div class="info-box-content">
                        <span class="info-box-text">Persons with work expireance</span>
                        <span class="info-box-number">@ViewData["PersonExpCount"]</span>
                    </div>

                </div>
            </div>
        </div>
        <div class="row">
            <div class="col-md-9">
                <div class="box box-primary">
                    <div class="box-header with-border">
                        <h3 class="box-title">Interviews</h3>


                    </div>
                    <div class="box-body">
                        <div class="col-md-12">
                            <div class="chart">
                                <canvas id="areaChart" style="height: 250px; width: 616px;" width="1232" height="500"></canvas>
                            </div>
                        </div>


                    </div>
                </div>
            </div>
            <div class="col-md-3">
                <div class="box box-danger">
                    <div class="box-header with-border">
                        <h3 class="box-title">Jobs types</h3>


                    </div>
                    <div class="box-body">
                        <div class="col-md-8">
                            <div class="chart-responsive">
                                <canvas id="person-job-chart" height="156" width="328" style="width: 328px; height: 318px;"></canvas>
                            </div>
                        </div>
                        <div class="col-md-4">
                            <ul class="chart-legend clearfix" id="person-job-legend"></ul>
                        </div>
                    </div>
                </div>

            </div>
        </div>

        <div class="row">
            <div class="col-md-4">
                <div class="box box-danger">
                    <div class="box-header with-border">
                        <h3 class="box-title">Latest applicants</h3>
                    </div>
                    <!-- /.box-header -->
                    <div class="box-body no-padding">
                        <ul class="users-list clearfix">
                            @foreach (var item in Model.Skip(Math.Max(0, Model.Count() - 10)))
                            {
                                var user = userManager.Users.FirstOrDefault(userApp => userApp.PersonIdColumn == item.PersonId);
                                <li>
                                    <img src="@(File.Exists(Path.Combine(Server.MapPath("~/wwwroot/image/UserImage"),  user?.Id +".jpg"))? "/wwwroot/image/UserImage/"+ user?.Id +".jpg" : "/wwwroot/image/UserImage/default.png")" alt="User Image">
                                    <a class="users-list-name" href="/Home/FullInformation/@item.PersonId">@item.FirstName @item.LastName</a>
                                    @if (@item.Birthday.HasValue)
                                    {
                                        <span class="users-list-date">@(DateTime.Now.Year - @item.Birthday.Value.Year) years</span>
                                    }
                                   
                                </li>

                            }
                        </ul>
                        <!-- /.users-list -->
                    </div>
                    <!-- /.box-body -->
                    <div class="box-footer text-center">
                        <a href="/" class="uppercase">View All Applications</a>
                    </div>
                    <!-- /.box-footer -->
                </div>
                <div class="box box-danger">
                    <div class="box-header with-border">
                        <h3 class="box-title">Aplicants age</h3>


                    </div>
                    <div class="box-body">
                        <div class="col-md-8">
                            <div class="chart-responsive">
                                <canvas id="person-age-chart" height="156" width="328" style="width: 328px; height: 318px;"></canvas>
                            </div>
                        </div>
                        <div class="col-md-4">
                            <ul class="chart-legend clearfix" id="person-age-legend"></ul>
                        </div>
                    </div>
                </div>
                <div class="box box-danger">
                    <div class="box-header with-border">
                        <h3 class="box-title">User expereance</h3>


                    </div>
                    <div class="box-body">
                        <div class="col-md-8">
                            <div class="chart-responsive">
                                <canvas id="person-exp-chart" height="156" width="328" style="width: 328px; height: 318px;"></canvas>
                            </div>
                        </div>
                        <div class="col-md-4">
                            <ul class="chart-legend clearfix" id="person-exp-legend"></ul>
                        </div>
                    </div>
                </div>
            </div>
            <div class="col-md-8">
                <div class="box box-primary">
                    <div class="box-body no-padding">
                        <!-- THE CALENDAR -->
                        <div id="calendar"></div>
                    </div>
                    <!-- /.box-body -->
                </div>
                <!-- /. box -->
            </div>
            @*<div class="col-md-4">

                </div>*@
        </div>
    </section>
</div>

@section scripts {
    <script src="https://cdnjs.cloudflare.com/ajax/libs/Chart.js/1.0.2/Chart.js"></script>
    <script src="https://cdnjs.cloudflare.com/ajax/libs/moment.js/2.22.1/moment.js"></script>
    <script src="https://cdnjs.cloudflare.com/ajax/libs/fullcalendar/3.4.0/fullcalendar.js"></script>
    <script>
    $(function() {

        function getRandomColor() {
            var letters = '0123456789ABCDEF';
            var color = '#';
            for (var i = 0; i < 6; i++) {
                color += letters[Math.floor(Math.random() * 16)];
            }
            return color;
        }

        var areaChartCanvas = $('#areaChart').get(0).getContext('2d')
        var areaChart = new Chart(areaChartCanvas)
        var areaChartData = {
            labels: [],
            datasets: []
        }
        var areaChartOptions = {
            showScale: true,
            scaleShowGridLines: false,
            scaleGridLineColor: 'rgba(0,0,0,.05)',
            scaleGridLineWidth: 1,
            scaleShowHorizontalLines: true,
            scaleShowVerticalLines: true,
            bezierCurve: true,
            bezierCurveTension: 0.3,
            pointDot: false,
            pointDotRadius: 4,
            pointDotStrokeWidth: 1,
            pointHitDetectionRadius: 20,
            datasetStroke: true,
            datasetStrokeWidth: 2,
            datasetFill: true,
            legendTemplate:
                '<ul class="<%=name.toLowerCase()%>-legend"><% for (var i=0; i<datasets.length; i++){%><li><span style="background-color:<%=datasets[i].lineColor%>"></span><%if(datasets[i].label){%><%=datasets[i].label%><%}%></li><%}%></ul>',
            maintainAspectRatio: true,
            responsive: true
        }

        $.ajax({
            url: "/Home/GroupUser",
            dataType: "json",
            method: "POST",
            success: function(result) {
                var labelsArray = [];
                for (var item in result) {
                    labelsArray.push(item);
                }
                areaChartData.labels = labelsArray;
                var data = [];
                for (var node in result) {
                    data.push(result[node]);
                }
                var color = getRandomColor();
                areaChartData.datasets.push({
                    fillColor: color,
                    strokeColor: color,
                    ointColor: color,
                    pointStrokeColor: color,
                    pointHighlightFill: color,
                    pointHighlightStroke: color,
                    data: data
                });
                areaChart.Line(areaChartData, areaChartOptions);
            }
        });

        var pieChartCanvas = $('#person-age-chart').get(0).getContext('2d');
        var pieChart = new Chart(pieChartCanvas);
        var PieData = [];
        var pieOptions = {
            segmentShowStroke: true,
            segmentStrokeColor: '#fff',
            segmentStrokeWidth: 2,
            percentageInnerCutout: 50,
            animationSteps: 100,
            animationEasing: 'easeOutBounce',
            animateRotate: true,
            animateScale: false,
            responsive: true,
            maintainAspectRatio: true,
            legendTemplate:
                '<ul class="<%=name.toLowerCase()years%>-legend"><% for (var i=0; i<segments.length; i++){%><li><span style="background-color:<%=segments[i].fillColor%>"></span><%if(segments[i].label){%><%=segments[i].label%><%}%></li><%}%></ul>'
        }
        $.ajax({
            url: "/Home/GroupPersonAge",
            dataType: "json",
            method: "POST",
            success: function(result) {
                for (var node in result) {
                    var color = getRandomColor();
                    PieData.push({
                        value: result[node],
                        color: color,
                        highlight: color,
                        label: node
                    });
                    $('#person-age-legend').append("<li><i class='fa fa-circle-o' style='color: " +
                        color +
                        "'></i> " +
                        node +
                        "years</li>");
                }

                pieChart.Doughnut(PieData, pieOptions);
            }
        });

        var pieChartCanvas2 = $('#person-exp-chart').get(0).getContext('2d');
        var pieChart2 = new Chart(pieChartCanvas2);
        var PieData2 = [];

        $.ajax({
            url: "/Home/GroupPersonExpireance",
            dataType: "json",
            method: "POST",
            success: function(result) {
                for (var node in result) {
                    var color = getRandomColor();
                    PieData2.push({
                        value: result[node],
                        color: color,
                        highlight: color,
                        label: node
                    });
                    $('#person-exp-legend').append("<li><i class='fa fa-circle-o' style='color: " +
                        color +
                        "'></i> " +
                        node +
                        "month</li>");
                }

                pieChart2.Doughnut(PieData2, pieOptions);
            }
        });

        var pieChartCanvas3 = $('#person-job-chart').get(0).getContext('2d');
        var pieChart3 = new Chart(pieChartCanvas3);
        var PieData3 = [];

        $.ajax({
            url: "/Home/GroupPersonJob",
            dataType: "json",
            method: "POST",
            success: function(result) {
                for (var node in result) {
                    var color = getRandomColor();
                    PieData3.push({
                        value: result[node],
                        color: color,
                        highlight: color,
                        label: node
                    });
                    $('#person-job-legend').append("<li><i class='fa fa-circle-o' style='color: " +
                        color +
                        "'></i> " +
                        node +
                        "</li>");
                }

                pieChart3.Doughnut(PieData3, pieOptions);
            }
        });


        var lineChartCanvas = $('#lineChart').get(0).getContext('2d');
        var lineChart = new Chart(lineChartCanvas);
        var lineChartOptions = areaChartOptions;
        lineChartOptions.datasetFill = false;
        var lineChartData = {
            datasets: [],
            labels: []
        };
        $.ajax({
            url: "/Admin/GroupUserRoleLogin",
            dataType: "json",
            method: "POST",
            success: function(result) {
                var labelsArray = [];
                for (var item in result[Object.keys(result)[0]]) {
                    labelsArray.push(item);
                }
                lineChartData.labels = labelsArray;
                for (var node in result) {
                    var color = getRandomColor();
                    var numArray = [];
                    for (var num in result[node]) {
                        numArray.push(result[node][num]);
                    }
                    lineChartData.datasets.push({
                        label: node,
                        fillColor: color,
                        strokeColor: color,
                        ointColor: color,
                        pointStrokeColor: color,
                        pointHighlightFill: color,
                        pointHighlightStroke: color,
                        data: numArray
                    });
                    $('#').append("<li><i class='fa fa-circle-o' style='color: " + color + "'></i> " + node + "</li>");
                }

                lineChart.Line(lineChartData, lineChartOptions);
            }
        });


    });
        $(function () {
            function getRandomColor() {
                var letters = '0123456789ABCDEF';
                var color = '#';
                for (var i = 0; i < 6; i++) {
                    color += letters[Math.floor(Math.random() * 16)];
                }
                return color;
            }
        $.ajax({
            url: "/Home/Calendar",
            dataType: "json",
            method: "POST",
            success: function (result) {
                var events = [];

                for (var i = 0; i < result.length; i++) {
                    var color = getRandomColor();

                    events.push({
                        title: result[i].Item1,
                        start: result[i].Item2,
                        backgroundColor: color,
                        borderColor: color
                    });
                }
                var date = new Date()
                var d    = date.getDate(),
                    m    = date.getMonth(),
                    y    = date.getFullYear()
                $('#calendar').fullCalendar({
                    header: {
                        left: 'prev,next today',
                        center: 'title',
                        right: 'month,agendaWeek,agendaDay'
                    },
                    buttonText: {
                        today: 'today',
                        month: 'month',
                        week: 'week',
                        day: 'day'
                    },
                    //Random default events
                    events: events,
                        //[
                    //    {
                    //        title: 'All Day Event',
                    //        start: new Date(y, m, 1),
                    //        backgroundColor: '#f56954', //red
                    //        borderColor: '#f56954' //red
                    //    },
                    //    {
                    //        title: 'Long Event',
                    //        start: new Date(y, m, d - 5),
                    //        end: new Date(y, m, d - 2),
                    //        backgroundColor: '#f39c12', //yellow
                    //        borderColor: '#f39c12' //yellow
                    //    },
                    //    {
                    //        title: 'Meeting',
                    //        start: new Date(y, m, d, 10, 30),
                    //        allDay: false,
                    //        backgroundColor: '#0073b7', //Blue
                    //        borderColor: '#0073b7' //Blue
                    //    },
                    //    {
                    //        title: 'Lunch',
                    //        start: new Date(y, m, d, 12, 0),
                    //        end: new Date(y, m, d, 14, 0),
                    //        allDay: false,
                    //        backgroundColor: '#00c0ef', //Info (aqua)
                    //        borderColor: '#00c0ef' //Info (aqua)
                    //    },
                    //    {
                    //        title: 'Birthday Party',
                    //        start: new Date(y, m, d + 1, 19, 0),
                    //        end: new Date(y, m, d + 1, 22, 30),
                    //        allDay: false,
                    //        backgroundColor: '#00a65a', //Success (green)
                    //        borderColor: '#00a65a' //Success (green)
                    //    },
                    //    {
                    //        title: 'Click for Google',
                    //        start: new Date(y, m, 28),
                    //        end: new Date(y, m, 29),
                    //        url: 'http://google.com/',
                    //        backgroundColor: '#3c8dbc', //Primary (light-blue)
                    //        borderColor: '#3c8dbc' //Primary (light-blue)
                    //    }
                    //],
                    editable: true,
                    droppable: true, // this allows things to be dropped onto the calendar !!!
                    drop: function (date, allDay) { // this function is called when something is dropped
                        // retrieve the dropped element's stored Event Object
                        var originalEventObject = $(this).data('eventObject')
                        // we need to copy it, so that multiple events don't have a reference to the same object
                        var copiedEventObject = $.extend({}, originalEventObject)
                        // assign it the date that was reported
                        copiedEventObject.start = date
                        copiedEventObject.allDay = allDay
                        copiedEventObject.backgroundColor = $(this).css('background-color')
                        copiedEventObject.borderColor = $(this).css('border-color')
                        // render the event on the calendar
                        // the last `true` argument determines if the event "sticks" (http://arshaw.com/fullcalendar/docs/event_rendering/renderEvent/)
                        $('#calendar').fullCalendar('renderEvent', copiedEventObject, true)
                        // is the "remove after drop" checkbox checked?
                        if ($('#drop-remove').is(':checked')) {
                            // if so, remove the element from the "Draggable Events" list
                            $(this).remove()
                        }
                    }
                })
                /* ADDING EVENTS */
                var currColor = '#3c8dbc' //Red by default
                //Color chooser button
                var colorChooser = $('#color-chooser-btn')
                $('#color-chooser > li > a').click(function (e) {
                    e.preventDefault()
                    //Save color
                    currColor = $(this).css('color')
                    //Add color effect to button
                    $('#add-new-event').css({ 'background-color': currColor, 'border-color': currColor })
                })
                $('#add-new-event').click(function (e) {
                    e.preventDefault()
                    //Get value and make sure it is not null
                    var val = $('#new-event').val()
                    if (val.length == 0) {
                        return
                    }
                    //Create events
                    var event = $('<div />')
                    event.css({
                        'background-color': currColor,
                        'border-color': currColor,
                        'color': '#fff'
                    }).addClass('external-event')
                    event.html(val)
                    $('#external-events').prepend(event)
                    //Add draggable funtionality
                    init_events(event)
                    //Remove event from text input
                    $('#new-event').val('')
                })
            }
            });
        });
    </script>
}