@using System.Web.Mvc.Html
@using HrApp.Helpers.Extensions
@model HrApp.ViewModels.Admin.UserViewModel

@using (Html.BeginForm())
{
    <div class="modal-header">
        <button type="button" class="close" data-dismiss="modal" aria-label="Close">
            <span aria-hidden="true">&times;</span>
        </button>
        <h4 class="modal-title">Edit User</h4>
    </div>
    <div class="modal-body">
        <div class="form-group has-feedback  @Html.AddClassIfPropertyInError(x => x.FirstName, "has-error")">
            @Html.LabelFor(x => x.FirstName, new { @class = "col-sm-3 control-label" })

            <div class="col-sm-9">
                @Html.TextBoxFor(model => model.FirstName, new { @class = "form-control", @type = "text" })
                <span style="display: block" class="help-block">@Html.ValidationMessageFor(model => model.FirstName)</span>
            </div>
        </div>

        <div class="form-group has-feedback  @Html.AddClassIfPropertyInError(x => x.LastName, "has-error")">
            @Html.LabelFor(x => x.FirstName, new { @class = "col-sm-3 control-label" })

            <div class="col-sm-9">
                @Html.TextBoxFor(model => model.LastName, new { @class = "form-control", @type = "text" })
                <span style="display: block" class="help-block">@Html.ValidationMessageFor(model => model.LastName)</span>
            </div>
        </div>

        <div class="form-group has-feedback  @Html.AddClassIfPropertyInError(x => x.Email, "has-error")">
            @Html.LabelFor(x => x.Email, new { @class = "col-sm-3 control-label" })

            <div class="col-sm-9">
                @Html.TextBoxFor(model => model.Email, new { @class = "form-control", @type = "text" })
                <span style="display: block" class="help-block">@Html.ValidationMessageFor(model => model.Email)</span>
            </div>
        </div>
        <div class="form-group">
            <div class="col-sm-offset-2 col-sm-10">
                <div class="checkbox">
                    <label>
                        @Html.CheckBoxFor(model => model.EmailConfirmed, new { @type = "checkbox" })
                        <span class="checkbox-material"><span class="check"></span></span> Email Confirmed
                    </label>
                </div>
            </div>
        </div>

        <div class="form-group has-feedback  @Html.AddClassIfPropertyInError(x => x.PhoneNumber, "has-error")">
            @Html.LabelFor(x => x.PhoneNumber, new { @class = "col-sm-3 control-label" })

            <div class="col-sm-9">
                @Html.TextBoxFor(model => model.PhoneNumber, new { @class = "form-control", @type = "text" })
                <span style="display: block" class="help-block">@Html.ValidationMessageFor(model => model.PhoneNumber)</span>
            </div>
        </div>
        <div class="form-group">
            <div class="col-sm-offset-2 col-sm-10">
                <div class="checkbox">
                    <label>
                        @Html.CheckBoxFor(model => model.PhoneNumberConfirmed, new { @type = "checkbox" })
                        <span class="checkbox-material"><span class="check"></span></span> Phone Number Confirmed
                    </label>
                </div>
            </div>
        </div>
        
        <div class="form-group">
            <div class="col-sm-offset-2 col-sm-10">
                <div class="checkbox">
                    <label>
                        @Html.CheckBoxFor(model => model.TwoFactorEnabled, new { @type = "checkbox" })
                        <span class="checkbox-material"><span class="check"></span></span> Two Factor Enabled
                    </label>
                </div>
            </div>
        </div>

       <br/>
       <br/>
       <br/>

        <div class="form-group">
            <div class="col-sm-offset-2 col-sm-10">
                <div class="checkbox">
                    <label>
                        @Html.CheckBoxFor(model => model.LockoutEnabled, new { @type = "checkbox" })
                        <span class="checkbox-material"><span class="check"></span></span> Lockout Enabled
                    </label>
                </div>
            </div>
        </div>
        <div class="form-group has-feedback  @Html.AddClassIfPropertyInError(x => x.Email, "has-error")">
            @Html.LabelFor(x => x.Email, new { @class = "col-sm-3 control-label" })

            <div class="col-sm-9">
                @Html.DropDownListFor(model => model.PersontId, new SelectList(Model.PersonList.Select(x => new SelectListItem { Value = x.PersonId.GetValueOrDefault().ToString(), Text = x.FirstName + " " + x.LastName }), "Value", "Text"), "", new { @class = "form-control " })
                <span style="display: block" class="help-block">@Html.ValidationMessageFor(model => model.Email)</span>
            </div>
        </div>
        @Html.HiddenFor(model => model.Id)

    </div>
    <div class="modal-footer">
        <button type="button" class="btn btn-default pull-left" data-dismiss="modal">Close</button>
        <button type="submit" class="btn btn-primary">Save changes</button>
    </div>
}
