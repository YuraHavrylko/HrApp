@using HrApp.Helpers.Extensions
@using HrApp.Models
@model HrApp.ViewModels.Admin.ResetPasswordViewModel
@{
    ViewBag.Title = "Reset password";
    ApplicationUser user = (ApplicationUser)ViewData["User"];
}
<div class="lockscreen-wrapper">
    <div class="lockscreen-logo">
        <a href="/"><b>Hr</b>App</a>
    </div>
    <!-- User name -->
    <h5 class="lockscreen-name text-center"><b>John Doe</b></h5>

    <!-- START LOCK SCREEN ITEM -->
    <div class="lockscreen-item" style="width: 350px;">
        <!-- lockscreen image -->
        <div class="lockscreen-image">
            <img src="@(File.Exists(Path.Combine(Server.MapPath("~/wwwroot/image/UserImage"),  user.Id +".jpg"))? "/wwwroot/image/UserImage/"+ user.Id +".jpg" : "/wwwroot/image/UserImage/default.png")" alt="User Image">
        </div>
        <!-- /.lockscreen-image -->

        <!-- lockscreen credentials (contains the form) -->
        @using (Ajax.BeginForm("ResetPassword", "Account", new AjaxOptions() { UpdateTargetId = "modal-default-content", }, new { @class = "lockscreen-credentials", role = "form" }))
        {
              @Html.AntiForgeryToken()
              <div class="input-group">

             
                  <div class="form-group is-empty @Html.AddClassIfPropertyInError(x => x.Password, "has-error")">
                      @Html.TextBoxFor(model => model.Password, new { @class = "form-control", @type = "password", @placeholder = @Html.DisplayNameFor(m => m.Password) })
                      <span style="display: block" class="help-block">@Html.ValidationMessageFor(model => model.Password)</span>
                  </div>
                
                  <div class="form-group  @Html.AddClassIfPropertyInError(x => x.ConfirmPassword, "has-error")">
                      @Html.TextBoxFor(model => model.ConfirmPassword, new { @class = "form-control", @type = "password", @placeholder = @Html.DisplayNameFor(m => m.ConfirmPassword) })
                      <span style="display: block" class="help-block">@Html.ValidationMessageFor(model => model.ConfirmPassword)</span>
                  </div>

                  <div class="input-group-btn">
                      <button type="button" class="btn"><i class="fa fa-arrow-right text-muted"></i></button>
                  </div>
              </div>
              @Html.HiddenFor(model => model.Code)
              @Html.HiddenFor(model => model.UserId)
              @Html.HiddenFor(model => model.Email)
          }
        <!-- /.lockscreen credentials -->

    </div>
    <!-- /.lockscreen-item -->
    <div class="help-block text-center">
        Enter your password to retrieve your session
    </div>
    <div class="text-center">
        <a href="/Account/Login">Or sign in as a different user</a>
    </div>
</div>
@*<div class="login-box">
    <div class="login-logo">
        <a href="#"><b>Hr</b>App</a>
    </div>
    <div class="login-box-body">
        <p class="login-box-msg">Sign in to start your session</p>

        @using (Html.BeginForm("Login", "Account", FormMethod.Post))
        {
            @Html.AntiForgeryToken()
            <span style="display: block;color: red" class="help-block">@Html.ValidationMessage("WrongUser")</span>
            <div class="form-group has-feedback  @Html.AddClassIfPropertyInError(x => x.Email, "has-error")">
                @Html.TextBoxFor(model => model.Email, new { @class = "form-control", @type = "email", @placeholder = @Html.DisplayNameFor(m => m.Email) })
                <span class="glyphicon glyphicon-envelope form-control-feedback"></span>
                <span style="display: block" class="help-block">@Html.ValidationMessageFor(model => model.Email)</span>
            </div>
            <div class="form-group has-feedback @Html.AddClassIfPropertyInError(x => x.Password, "has-error")">
                @Html.TextBoxFor(model => model.Password, new { @class = "form-control", @type = "password", @placeholder = @Html.DisplayNameFor(m => m.Password) })
                <span class="glyphicon glyphicon-lock form-control-feedback"></span>
                <span style="display: block" class="help-block">@Html.ValidationMessageFor(model => model.Password)</span>
            </div>
            <div class="row">
                <div class="col-xs-7">
                    <div class="checkbox">
                        <label>
                            <input type="checkbox"> Remember Me
                        </label>
                    </div>
                </div>
                <div class="col-xs-5">
                    <button type="submit" class="btn btn-primary btn-raised btn-block btn-flat">Sign In</button>
                </div>
            </div>
        }
        @Html.ActionLink("Register a new membership", "Register", "Account", null, new { @class = "text-center" })
        <br />
        <a id="forgot-pass" href="#">I forgot password</a>
    </div>
</div>*@
@section scripts {


    <script src="/Scripts/jquery.unobtrusive-ajax.min.js"></script>
    <script src="~/wwwroot/js/account.js"></script>
}

@*<h2>@ViewBag.Title.</h2>

    @using (Html.BeginForm("ResetPassword", "Account", FormMethod.Post, new { @class = "form-horizontal", role = "form" }))
    {
        @Html.AntiForgeryToken()
        <h4>Reset your password.</h4>
        <hr />
        @Html.ValidationSummary("", new { @class = "text-danger" })
        @Html.HiddenFor(model => model.Code)
        <div class="form-group">
            @Html.LabelFor(m => m.Email, new { @class = "col-md-2 control-label" })
            <div class="col-md-10">
                @Html.TextBoxFor(m => m.Email, new { @class = "form-control" })
            </div>
        </div>
        <div class="form-group">
            @Html.LabelFor(m => m.Password, new { @class = "col-md-2 control-label" })
            <div class="col-md-10">
                @Html.PasswordFor(m => m.Password, new { @class = "form-control" })
            </div>
        </div>
        <div class="form-group">
            @Html.LabelFor(m => m.ConfirmPassword, new { @class = "col-md-2 control-label" })
            <div class="col-md-10">
                @Html.PasswordFor(m => m.ConfirmPassword, new { @class = "form-control" })
            </div>
        </div>
        <div class="form-group">
            <div class="col-md-offset-2 col-md-10">
                <input type="submit" class="btn btn-default" value="Reset" />
            </div>
        </div>
    }*@